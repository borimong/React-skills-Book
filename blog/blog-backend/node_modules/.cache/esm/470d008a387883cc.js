let Koa,Router,bodyParser,mongoose,serve,path,send,api,jwtMiddleware,createFakeData;_387‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_387‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_387‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_387‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_387‍.w("koa-static",[["default",["serve"],function(v){serve=v}]]);_387‍.w("path",[["default",["path"],function(v){path=v}]]);_387‍.w("koa-send",[["default",["send"],function(v){send=v}]]);_387‍.w("./api",[["default",["api"],function(v){api=v}]]);_387‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);_387‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);
require('dotenv').config();













const {PORT, MONGO_URI} = process.env;

mongoose
.connect(MONGO_URI)
.then(() => {
    console.log('Connected to MongoDB');
})
.catch(e => {
    _387‍.g.console.error(e);
});

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const buildDirectory = path.resolve(__dirname, '../../blog-frontend/build');
app.use(serve(build))

const port = PORT || 4000;
app.listen(port, () => {
  _387‍.g.console.log('Listening to port %d', port);
});
